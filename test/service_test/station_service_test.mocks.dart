// Mocks generated by Mockito 5.1.0 from annotations
// in shuttla/test/service_test/station_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:cloud_firestore/cloud_firestore.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shuttla/core/data_models/app_user.dart' as _i7;
import 'package:shuttla/core/data_models/station.dart' as _i4;
import 'package:shuttla/core/data_models/user_data.dart' as _i6;
import 'package:shuttla/core/services/station_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [StationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStationService extends _i1.Mock implements _i2.StationService {
  MockStationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> createStation(
          {String? stationName,
          String? description,
          List<double>? coordinates,
          int? capacity}) =>
      (super.noSuchMethod(
          Invocation.method(#createStation, [], {
            #stationName: stationName,
            #description: description,
            #coordinates: coordinates,
            #capacity: capacity
          }),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<List<_i4.Station>> getStation() =>
      (super.noSuchMethod(Invocation.method(#getStation, []),
              returnValue: Future<List<_i4.Station>>.value(<_i4.Station>[]))
          as _i3.Future<List<_i4.Station>>);
  @override
  _i3.Future<dynamic> deleteStation(_i5.DocumentReference? stationReference) =>
      (super.noSuchMethod(Invocation.method(#deleteStation, [stationReference]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> editStation(_i4.Station? station) =>
      (super.noSuchMethod(Invocation.method(#editStation, [station]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> joinStation({_i6.UserData? user, _i4.Station? station}) =>
      (super.noSuchMethod(
          Invocation.method(#joinStation, [], {#user: user, #station: station}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> leaveStation(
          {_i6.UserData? user, _i4.Station? station}) =>
      (super.noSuchMethod(
          Invocation.method(
              #leaveStation, [], {#user: user, #station: station}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Stream<_i5.QuerySnapshot> getStationSnapshot() =>
      (super.noSuchMethod(Invocation.method(#getStationSnapshot, []),
              returnValue: Stream<_i5.QuerySnapshot>.empty())
          as _i3.Stream<_i5.QuerySnapshot>);
  @override
  _i3.Stream<_i5.DocumentSnapshot> getStationDetailStream(
          _i4.Station? station) =>
      (super.noSuchMethod(Invocation.method(#getStationDetailStream, [station]),
              returnValue: Stream<_i5.DocumentSnapshot>.empty())
          as _i3.Stream<_i5.DocumentSnapshot>);
  @override
  _i3.Future<bool> driverSelectStation(
          {_i4.Station? station, _i7.AppUser? driver}) =>
      (super.noSuchMethod(
          Invocation.method(
              #driverSelectStation, [], {#station: station, #driver: driver}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<dynamic> driverCancelStationSelection(
          {_i7.AppUser? driver, _i4.Station? station}) =>
      (super.noSuchMethod(
          Invocation.method(#driverCancelStationSelection, [],
              {#driver: driver, #station: station}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> driverPickupPassengers(
          {_i7.AppUser? driver, _i4.Station? station}) =>
      (super.noSuchMethod(
          Invocation.method(#driverPickupPassengers, [],
              {#driver: driver, #station: station}),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
}
